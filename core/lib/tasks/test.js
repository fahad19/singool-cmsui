// Generated by CoffeeScript 1.6.1
(function() {
  var Test, exec, _,
    _this = this;

  _ = require('underscore');

  exec = require('child_process').exec;

  Test = (function() {

    function Test(singool) {
      var _this = this;
      this.singool = singool;
      this.run = function() {
        return Test.prototype.run.apply(_this, arguments);
      };
      this.mochaPhantom = function() {
        return Test.prototype.mochaPhantom.apply(_this, arguments);
      };
      this.server = function() {
        return Test.prototype.server.apply(_this, arguments);
      };
    }

    Test.prototype.description = 'Run tests';

    Test.prototype.url = null;

    Test.prototype._server = null;

    Test.prototype.server = function() {
      var port;
      this.singool.config.test = true;
      this.singool.config.init = false;
      this.singool.config.ignore = [];
      this._server = this.singool.createServer();
      port = process.env.PORT || 3000;
      this._server.listen(port);
      this.url = 'http://localhost:' + port;
      return console.log('Test server running at ' + this.url);
    };

    Test.prototype.mochaPhantom = function() {
      var cmd, rootPath,
        _this = this;
      rootPath = this.singool.rootPath();
      cmd = rootPath + '/node_modules/.bin/mocha-phantomjs ' + this.url;
      console.log('Running command: ' + cmd);
      return exec(cmd, function(error, stdout, stderr) {
        if (error) {
          throw error;
        }
        if (stdout) {
          console.log(stdout);
        } else {
          console.log(stderr);
        }
        return _this._server.close();
      });
    };

    Test.prototype.run = function() {
      this.server();
      return this.mochaPhantom();
    };

    return Test;

  })();

  module.exports = Test;

}).call(this);
