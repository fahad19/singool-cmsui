// Generated by CoffeeScript 1.6.1
(function() {
  var Layout, fs;

  fs = require('fs');

  Layout = (function() {

    Layout.prototype.config = null;

    function Layout(singool) {
      this.singool = singool;
      this.config = this.singool.config;
    }

    Layout.prototype.read = function() {
      return fs.readFileSync(this.config.themesPath + '/' + this.config.theme + '/layouts/index.html', 'utf8');
    };

    Layout.prototype.readTest = function() {
      return fs.readFileSync(this.config.jsPath + '/lib/singool/tests/test.html', 'utf8');
    };

    Layout.prototype.generate = function(callback) {
      var source;
      if (callback == null) {
        callback = false;
      }
      if (this.config.test) {
        source = this.readTest();
      } else {
        source = this.read();
      }
      if (callback) {
        return callback(source);
      } else {
        return source;
      }
    };

    Layout.prototype.write = function(path) {
      var _this = this;
      if (path == null) {
        path = null;
      }
      if (!path) {
        path = this.config.publicPath + '/index.html';
      }
      return this.generate(function(source) {
        fs.writeFileSync(path, source);
        return console.log('Theme layout file written at: ' + path);
      });
    };

    Layout.prototype.clear = function() {
      var file;
      file = this.config.publicPath + '/index.html';
      if (fs.existsSync(file)) {
        fs.unlinkSync(file);
        return console.log('index.html deleted');
      }
    };

    return Layout;

  })();

  module.exports = Layout;

}).call(this);
